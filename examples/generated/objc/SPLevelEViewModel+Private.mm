// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from example.djinni

#import "SPLevelEViewModel+Private.h"
#import "SPLevelFViewModel+Private.h"
#import "DJIMarshal+Private.h"
#include <cassert>

namespace djinni_generated {

auto LevelE::toCpp(ObjcType obj) -> CppType
{
    assert(obj);
    ::transitLib::viewModel::LevelE model;
    model.fieldA = ::djinni::String::toCpp(obj.fieldA);
    model.fieldB = ::djinni::String::toCpp(obj.fieldB);
    model.fieldC = ::djinni::String::toCpp(obj.fieldC);
    model.fieldD = ::djinni::String::toCpp(obj.fieldD);
    model.fieldE = ::djinni::String::toCpp(obj.fieldE);
    return model;
}

auto LevelE::fromCpp(const CppType& cpp) -> ObjcType
{
    ::djinni::LocalRef<ObjcType> r;
    if (auto myObject = dynamic_pointer_cast<::transitLib::viewModel::LevelF>(cpp))
    {
        r = LevelF::fromCpp(jniEnv, *myObject);
    }
    else {
        r = [[SPLevelEViewModel alloc] initWithFieldA:(::djinni::String::fromCpp(cpp.fieldA))
                                               fieldB:(::djinni::String::fromCpp(cpp.fieldB))
                                               fieldC:(::djinni::String::fromCpp(cpp.fieldC))
                                               fieldD:(::djinni::String::fromCpp(cpp.fieldD))
                                               fieldE:(::djinni::String::fromCpp(cpp.fieldE))];
    }
    return r;

}

} // namespace djinni_generated
