// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from example.djinni

#pragma once

#include "LevelB2ViewModel.h"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeLevelB2 final {
public:
    using CppType = std::shared_ptr<::transitLib::viewModel::LevelB2>;
    using JniType = jobject;

    using Boxed = NativeLevelB2;

    ~NativeLevelB2();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeLevelB2();
    friend ::djinni::JniClass<NativeLevelB2>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("djinni/java/src/LevelB2") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V") };
    const jfieldID field_fieldA { ::djinni::jniGetFieldID(clazz.get(), "fieldA", "Ljava/lang/String;") };
    const jfieldID field_fieldB { ::djinni::jniGetFieldID(clazz.get(), "fieldB", "Ljava/lang/String;") };
    const jfieldID field_fieldB2 { ::djinni::jniGetFieldID(clazz.get(), "fieldB2", "Ljava/lang/String;") };
};

} // namespace djinni_generated
