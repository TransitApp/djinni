// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from example.djinni

#include "NativeLevelB2C.h"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeLevelB2C::NativeLevelB2C() = default;

NativeLevelB2C::~NativeLevelB2C() = default;

auto NativeLevelB2C::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    ::djinni::LocalRef<JniType> r;
    const auto& data = ::djinni::JniClass<NativeLevelB2C>::get();
    r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                      ::djinni::get(::djinni::String::fromCpp(jniEnv, c.fieldA)),
                                                      ::djinni::get(::djinni::String::fromCpp(jniEnv, c.fieldB)),
                                                      ::djinni::get(::djinni::String::fromCpp(jniEnv, c.fieldB2)),
                                                      ::djinni::get(::djinni::String::fromCpp(jniEnv, c.fieldB2C)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeLevelB2C::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 5);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeLevelB2C>::get();
    ::transitLib::viewModel::LevelB2C model;
    model.fieldA = ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_fieldA));
    model.fieldB = ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_fieldB));
    model.fieldB2 = ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_fieldB2));
    model.fieldB2C = ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_fieldB2C));
    return model;
}

} // namespace djinni_generated
